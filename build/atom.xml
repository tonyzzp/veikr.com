<feed xmlns="http://www.w3.org/2005/Atom"><title>PuGo</title><id></id><link rel="self" href="http://localhost:18080/atom.xml"></link><updated>2023-05-08T13:12:02+00:00</updated><entry><title>Hello World</title><id></id><link rel="alternate" href="http://localhost:18080/2023/05/hello-world/"></link><published>2023-05-08T13:12:02+00:00</published><updated>2023-05-08T13:12:02+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>If you see this article, you have installed it successfully. Thank you for using PuGo. I hope you can use it happily.&lt;/p>
</summary><content type="html">&lt;p>If you see this article, you have installed it successfully. Thank you for using PuGo. I hope you can use it happily.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="guide">Guide&lt;/h3>
&lt;ul>
&lt;li>create a new post&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">pugo create post new-hello-world.md
&lt;/code>&lt;/pre>
&lt;p>&lt;code>new-hello-world.md&lt;/code> is at &lt;code>content/posts/new-hello-world.md&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>create new page&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">pugo create page new-hello-page.md
&lt;/code>&lt;/pre>
&lt;p>&lt;code>new-hello-page.md&lt;/code> is at &lt;code>content/pages/new-hello-page.md&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>build site&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">pugo build
&lt;/code>&lt;/pre>
&lt;p>all files are builded at &lt;code>build/&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>serve locally&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">pugo serve
&lt;/code>&lt;/pre>
&lt;p>http server is started at &lt;code>localhost:18080&lt;/code>.&lt;/p>
&lt;h3 id="publish">Publish&lt;/h3>
&lt;p>read online docs:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#">deploy to github pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="#">deploy to netlify&lt;/a>&lt;/li>
&lt;li>&lt;a href="#">deploy to self host&lt;/a>&lt;/li>
&lt;/ul>
</content></entry><entry><title>在windows下使用gcc编译jni的简单教程</title><id></id><link rel="alternate" href="http://localhost:18080/2012/07/windows_gcc_jni/"></link><published>2012-07-29T21:12:06+00:00</published><updated>2012-07-29T21:12:06+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>&lt;!-- raw HTML omitted -->1、安装MinGW&lt;!-- raw HTML omitted -->，这个可以为windows提供gcc编译环境。&lt;/p>
&lt;p>到&lt;!-- raw HTML omitted -->&lt;a href="http://sourceforge.net/projects/mingw/files/">http://sourceforge.net/projects/mingw/files/&lt;/a>&lt;!-- raw HTML omitted --> 下载，是.exe的，在线安装，但很快。安装时选c compiler就行了，也可以把c++的也装了。安装完成后，为了方便使用最好配置一下环境变量。把MinGW/bin目录加入环境变量。&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->2、编写JAVA文件&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>写个最简单的：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>然后编译java文件 javac Test.java&lt;/p>
</summary><content type="html">&lt;p>&lt;!-- raw HTML omitted -->1、安装MinGW&lt;!-- raw HTML omitted -->，这个可以为windows提供gcc编译环境。&lt;/p>
&lt;p>到&lt;!-- raw HTML omitted -->&lt;a href="http://sourceforge.net/projects/mingw/files/">http://sourceforge.net/projects/mingw/files/&lt;/a>&lt;!-- raw HTML omitted --> 下载，是.exe的，在线安装，但很快。安装时选c compiler就行了，也可以把c++的也装了。安装完成后，为了方便使用最好配置一下环境变量。把MinGW/bin目录加入环境变量。&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->2、编写JAVA文件&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>写个最简单的：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>然后编译java文件 javac Test.java&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->3、生成.h头文件&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>javah Test&lt;/p>
&lt;p>就这一个简单的命令就行了。(如果有包名，需要类似javah com.google.Test这样，注意命令行目录)&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->4、实现.c文件&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>.h生成后可以打开看一下，里面有个方法是需要自己实现的。如下：&lt;/p>
&lt;p>JNIEXPORT void JNICALL Java_Test_print&lt;br />
(JNIEnv *, jclass, jint);&lt;/p>
&lt;p>这个就是我们java里写的print方法了。&lt;/p>
&lt;p>这里简单说一下c的方法名命名规则是Java_packagename_Classname_method&lt;/p>
&lt;p>要实现的就是这个方法了。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>这里简单说一下，include的第一个是c的标准输入输出库，第2个是jni库，这个文件是在java/include里的，第3个就是自己刚才生成的头文件了，注意一定要用“”，不是用&amp;lt;&amp;gt;&lt;/p>
&lt;p>方法的前2个参数是固定的，不用管。&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->5、把.c文件编译成.dll&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>命令：&lt;/p>
&lt;p>gcc -I%JAVA_HOME%\include -I%JAVA_HOME%\include\win32 -shared -Wl,--kill-at -s -o lib.dll Test.c&lt;/p>
&lt;p> &lt;/p>
&lt;p>解释一下：&lt;/p>
&lt;p>-I(大写字母I，include的意思)是加入自己的库，也就是告诉编译器jni.h的位置。当然不加这个参数也可以，自己把jni.h和jni_md.h文件复制出来和Test.c放一起，另外include改为&amp;quot;&amp;quot;&lt;/p>
&lt;p>-shared表示编译成.dll库文件&lt;/p>
&lt;p>-s参数可以大幅减小.dll文件的大小，不加也可以&lt;/p>
&lt;p>-o表示目标文件名，不加也可以，会有默认名，但要自己改成java中导入库的名字，这里是lib&lt;/p>
&lt;p>-Wl,--kill-at  这个参数我也不明白，反正要加，不加能编译成.dll，但java中会报错。(是小写字母L，不是数字1)&lt;/p>
&lt;p> &lt;/p>
&lt;p>好了，java Test看结果吧。&lt;/p>
</content></entry><entry><title>go语言的中'继承'</title><id></id><link rel="alternate" href="http://localhost:18080/2012/07/golang_extend/"></link><published>2012-07-21T20:17:13+00:00</published><updated>2012-07-21T20:17:13+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>最近看了下go语言，以前都只会java，则开始接触go语言时发现和java实在是有太多太多的不同，还有些不习惯，但慢慢的觉得还是挺有意思的。虽然学go语言感觉好像根本用不上，但多看看别的语言也是不错的。go语言默认是没有继承的，但结构体支持匿名字段，可以利用这个来实现&amp;quot;继承&amp;quot;。废话不多说，直接上代码，很简单，一看就会。&lt;/p>
&lt;p>先大概说下这段代码，看起来会更方便些。&lt;/p>
&lt;p>类Human。有2个字段：name,sex。有2个方法：walk，eat。&lt;/p>
&lt;p>类SuperMan。有3个字段：Human，name，level。有2个方法：eat，fly。&lt;/p>
&lt;p>这是标准说法，但你可以这么理解：SuperMan继承了Human，当然同样继承了所有字段和所有方法。同时又加入了自己的两个字段，其中有一个字段和父类是同名的，另外重写了父类中的一个方法，也添加了自己的一个方法。&lt;/p>
&lt;p>代码如下：&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>代码很简单，自己把代码复制出来运行一下，然后一行行对照着看，很容易就理解了。也没什么好讲的。&lt;/p>
</summary><content type="html">&lt;p>最近看了下go语言，以前都只会java，则开始接触go语言时发现和java实在是有太多太多的不同，还有些不习惯，但慢慢的觉得还是挺有意思的。虽然学go语言感觉好像根本用不上，但多看看别的语言也是不错的。go语言默认是没有继承的，但结构体支持匿名字段，可以利用这个来实现&amp;quot;继承&amp;quot;。废话不多说，直接上代码，很简单，一看就会。&lt;/p>
&lt;p>先大概说下这段代码，看起来会更方便些。&lt;/p>
&lt;p>类Human。有2个字段：name,sex。有2个方法：walk，eat。&lt;/p>
&lt;p>类SuperMan。有3个字段：Human，name，level。有2个方法：eat，fly。&lt;/p>
&lt;p>这是标准说法，但你可以这么理解：SuperMan继承了Human，当然同样继承了所有字段和所有方法。同时又加入了自己的两个字段，其中有一个字段和父类是同名的，另外重写了父类中的一个方法，也添加了自己的一个方法。&lt;/p>
&lt;p>代码如下：&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>代码很简单，自己把代码复制出来运行一下，然后一行行对照着看，很容易就理解了。也没什么好讲的。&lt;/p>
</content></entry><entry><title>android中service的简单实现</title><id></id><link rel="alternate" href="http://localhost:18080/2012/06/android_service/"></link><published>2012-06-10T15:56:43+00:00</published><updated>2012-06-10T15:56:43+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>简单介绍下android中service的用法，其实我也没太研究明白，只是拿出来分享一下。&lt;/p>
&lt;p>废话不多说，直接上代码比较好。&lt;/p>
&lt;p>一、首先你需要有个类，继承自service。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>onCreate:在服务首次创建时调用。&lt;/p>
&lt;p>onDestroy:在服务被销毁时调用。&lt;/p>
&lt;p>onStart:当使用startService时调用此方法，如果是第一次调用，则会先调用onCreate来创建服务。在服务已经启动的情况下，每次使用startService方法都会调用onStart方法，但服务只会有一个，不会产生多个。(现已改为onStartCommand，onStart不再建议使用)。&lt;/p>
&lt;p>onBind:使用bindService时调用此方法,返回一个IBinder，用来与服务进行交互。&lt;/p>
&lt;p>onUnBind:使用unbindService时调用。unbindService只能在服务已经绑定状态才会能调用，否则将会抛异常。在一个activity中绑定了service,当activity退出时必须unbindService，否则也会有异常。&lt;/p>
&lt;p> &lt;/p>
&lt;p>主要就这几个方法了，这里简单说下service的生命周期。&lt;/p>
&lt;p>1、当第一次调用startService或bindService(加入BIND_AUTO_CREATE  flag)时，服务会被创建，onCreate方法被调用。&lt;/p>
&lt;p>2、每一次使用startService时onStart方法都会被调用，多次使用bindService，onBind方法只会调用一次。&lt;/p>
&lt;p>3、使用stopService会停止服务，onDestroy方法被调用。使用unbindService也会停止服务，onunBind和onDestroy会被调用。但这里有个前提：如果你同时用了startService和bindService，那你必须同时调用unBindService和stopService，服务才会真正被停止。&lt;/p>
&lt;p> &lt;/p>
&lt;p>在service中onBind方法返回一个IBinder，用此来与服务进行通信交互。所以服务的一般用法是，在activity中先startServie来启用服务，然后使用bindService来获得IBinder，与服务交互。activity退出时必须调用unBindService,但服务还不会停止，当你不再服务此服务时，调用stopService来停止服务。&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>另外，你需要在manifest中配置一下服务，这一句话就够了。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>其实我还有些疑问，我这里的onServiceDisconnected从来没被调用过，onRebind也从来没被调用过，还不明白为什么，有知道的朋友麻烦指教一下。&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->注&lt;!-- raw HTML omitted -->：可能有人遇到过一个类似的异常：&lt;/p>
&lt;p>java.lang.ClassCastException: android.os.BinderProxy&lt;/p>
&lt;p>在onServiceConnected中对返回的IBinder进行强制类型转换出出现这个异常。解决办法很简单，去掉manifest中service配置中的process属性。使用此属性会将service放到一个单独的线程中，但会出现强制类型转换异常。&lt;/p>
</summary><content type="html">&lt;p>简单介绍下android中service的用法，其实我也没太研究明白，只是拿出来分享一下。&lt;/p>
&lt;p>废话不多说，直接上代码比较好。&lt;/p>
&lt;p>一、首先你需要有个类，继承自service。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>onCreate:在服务首次创建时调用。&lt;/p>
&lt;p>onDestroy:在服务被销毁时调用。&lt;/p>
&lt;p>onStart:当使用startService时调用此方法，如果是第一次调用，则会先调用onCreate来创建服务。在服务已经启动的情况下，每次使用startService方法都会调用onStart方法，但服务只会有一个，不会产生多个。(现已改为onStartCommand，onStart不再建议使用)。&lt;/p>
&lt;p>onBind:使用bindService时调用此方法,返回一个IBinder，用来与服务进行交互。&lt;/p>
&lt;p>onUnBind:使用unbindService时调用。unbindService只能在服务已经绑定状态才会能调用，否则将会抛异常。在一个activity中绑定了service,当activity退出时必须unbindService，否则也会有异常。&lt;/p>
&lt;p> &lt;/p>
&lt;p>主要就这几个方法了，这里简单说下service的生命周期。&lt;/p>
&lt;p>1、当第一次调用startService或bindService(加入BIND_AUTO_CREATE  flag)时，服务会被创建，onCreate方法被调用。&lt;/p>
&lt;p>2、每一次使用startService时onStart方法都会被调用，多次使用bindService，onBind方法只会调用一次。&lt;/p>
&lt;p>3、使用stopService会停止服务，onDestroy方法被调用。使用unbindService也会停止服务，onunBind和onDestroy会被调用。但这里有个前提：如果你同时用了startService和bindService，那你必须同时调用unBindService和stopService，服务才会真正被停止。&lt;/p>
&lt;p> &lt;/p>
&lt;p>在service中onBind方法返回一个IBinder，用此来与服务进行通信交互。所以服务的一般用法是，在activity中先startServie来启用服务，然后使用bindService来获得IBinder，与服务交互。activity退出时必须调用unBindService,但服务还不会停止，当你不再服务此服务时，调用stopService来停止服务。&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>另外，你需要在manifest中配置一下服务，这一句话就够了。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>其实我还有些疑问，我这里的onServiceDisconnected从来没被调用过，onRebind也从来没被调用过，还不明白为什么，有知道的朋友麻烦指教一下。&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->注&lt;!-- raw HTML omitted -->：可能有人遇到过一个类似的异常：&lt;/p>
&lt;p>java.lang.ClassCastException: android.os.BinderProxy&lt;/p>
&lt;p>在onServiceConnected中对返回的IBinder进行强制类型转换出出现这个异常。解决办法很简单，去掉manifest中service配置中的process属性。使用此属性会将service放到一个单独的线程中，但会出现强制类型转换异常。&lt;/p>
</content></entry><entry><title>libgdx中异步从网络加载图片</title><id></id><link rel="alternate" href="http://localhost:18080/2012/03/libgdx_load_texture_network_async/"></link><published>2012-03-30T23:01:37+00:00</published><updated>2012-03-30T23:01:37+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>使用libgdx从网络中下载图片，并转换为texture画出来。其实并不复杂，只需要四步就可以了。&lt;/p>
&lt;p>1、从网络中读取图片数据到byte[]&lt;/p>
&lt;p>2、使用byte[]生成一个pixmap&lt;/p>
&lt;p>3、将pixmap画到一张边长是2的N次幂的texture上&lt;/p>
&lt;p>4、从texture构造textureRegion&lt;/p>
</summary><content type="html">&lt;p>使用libgdx从网络中下载图片，并转换为texture画出来。其实并不复杂，只需要四步就可以了。&lt;/p>
&lt;p>1、从网络中读取图片数据到byte[]&lt;/p>
&lt;p>2、使用byte[]生成一个pixmap&lt;/p>
&lt;p>3、将pixmap画到一张边长是2的N次幂的texture上&lt;/p>
&lt;p>4、从texture构造textureRegion&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>大概代码如下：&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->一、从url读取byte[]&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->二、使用byte[]生成一个pixmap&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->三、将pixmap画到texture上&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->四、构造textureRegion&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>大功告成！&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->但是，这里有一些小问题需要注意的。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>1、new Texture()这类方法必须放到绘制线程，但读取网络数据流你肯定不能放到绘制线程。&lt;/p>
&lt;p>所以可行的办法是新启线程读取数据流，然后使用Gdx.app.postRunnable(new Runnable())来将构造texture的操作post到绘制线程去完成。&lt;/p>
&lt;p> &lt;/p>
&lt;p>2、另外一个小技巧，你肯定会想写一个工具类来从网络加载texture，但因为是异步的，所以是不能使用返回值的方式传回texture的。&lt;/p>
&lt;p>所以必须这样。&lt;/p>
&lt;p> &lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p> &lt;/p>
&lt;p>最后还有要注意的，&lt;!-- raw HTML omitted -->libgdx只支持jpb,png,bmp格式图片，gif什么的就不行了。&lt;!-- raw HTML omitted -->&lt;/p>
</content></entry><entry><title>java的http请求(get/post/上传文件)(附源码下载)</title><id></id><link rel="alternate" href="http://localhost:18080/2012/03/java_http_get_post_multi_file_upload/"></link><published>2012-03-24T12:22:12+00:00</published><updated>2012-03-24T12:22:12+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>使用标准http协议实现，(HttpUrlConneciton)，不使用第三方包&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
</summary><content type="html">&lt;p>使用标准http协议实现，(HttpUrlConneciton)，不使用第三方包&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
</content></entry><entry><title>读取apk程序包的内容</title><id></id><link rel="alternate" href="http://localhost:18080/2012/02/resolve_apk_file_reource/"></link><published>2012-02-21T13:39:53+00:00</published><updated>2012-02-21T13:39:53+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>一、对于已安装应用，只需要getPackageManager().getInstalledPacked(int flags)即可得到PackageInfo.&lt;/p>
&lt;!-- raw HTML omitted -->
</summary><content type="html">&lt;p>一、对于已安装应用，只需要getPackageManager().getInstalledPacked(int flags)即可得到PackageInfo.&lt;/p>
&lt;!-- raw HTML omitted -->
</content></entry><entry><title>ANDROID应用内截图的代码实现</title><id></id><link rel="alternate" href="http://localhost:18080/2012/02/android_screen_shot/"></link><published>2012-02-19T16:31:18+00:00</published><updated>2012-02-19T16:31:18+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>方法一：&lt;/p>
&lt;p>View view= getWindow().getDecorView();&lt;/p>
&lt;p>Bitmap bmp = Bitmap.createBitmap(480, 800, Bitmap.Config.ARGB_8888);&lt;/p>
&lt;p>view.draw(new Canvas(b));&lt;/p>
&lt;p>bmp就是截取的图片了，可通过bmp.compress(CompressFormat.PNG, 100, new FileOutputStream(file));把图片保存为文件。&lt;/p>
&lt;p> &lt;/p>
&lt;p>方法二：&lt;/p>
&lt;p>getWindow().getDecorView().setDrawingCacheEnabled(true);&lt;/p>
&lt;p>bmp=getWindow().getDecorView().getDrawingCache();&lt;/p>
&lt;p> &lt;/p>
&lt;p>但这样得到的图片是包含状态栏和标题栏的，如果想把状态栏和标题栏去掉，可把得到的图片顶部一部分剪裁掉。&lt;/p>
&lt;p>1、得到状态栏高度&lt;/p>
&lt;p>Rect rect = new Rect();&lt;/p>
&lt;p>view.getWindowVisibleDisplayFrame(rect);&lt;/p>
&lt;p>int statusBarHeight = rect.top;&lt;/p>
&lt;p>System.out.println(&amp;quot;状态栏高度：&amp;quot; + statusBarHeight);&lt;/p>
&lt;p> &lt;/p>
&lt;p>2、得到标题栏高度&lt;/p>
&lt;p>int wintop = getWindow().findViewById(android.R.id.content).getTop();&lt;/p>
&lt;p>int titleBarHeight = wintop - statusBarHeight;&lt;/p>
&lt;p>System.out.println(&amp;quot;标题栏高度:&amp;quot; + titleBarHeight);&lt;/p>
&lt;p> &lt;/p>
&lt;p> &lt;/p>
&lt;p>注：这样得到的截图是不会包含dialog和popupwindow的，你必须单独得到popupwindow的截图，然后再和背景截图合到一起。&lt;/p>
&lt;p>另外，截图的相关代码是不能放到oncreate中的，因为这时候getDectorView()得到的是null&lt;/p>
&lt;p> &lt;/p>
&lt;p> &lt;/p>
&lt;p>把两个bitmap合到一起的方法很简单。&lt;/p>
&lt;p>Bitmap bmpall=Biatmap.createBitmap(width,height,Config.ARGB_8888);&lt;/p>
&lt;p>Canvas canvas=new Canvas(bmpall);&lt;/p>
&lt;p>canvas.drawBitmap(bmp1,x,y,paint);&lt;/p>
&lt;p>canvas.drawBitmap(bmp2,x,y,paint);&lt;/p>
&lt;p>得到的bmpall就是合在一起的图片了。&lt;/p>
&lt;p> &lt;/p>
&lt;p>ps:按理说也getWindow.findViewById(android.R.id.content)得到的view就是不包含状态栏和标题栏的view，但这个我还没有试过。&lt;/p>
</summary><content type="html">&lt;p>方法一：&lt;/p>
&lt;p>View view= getWindow().getDecorView();&lt;/p>
&lt;p>Bitmap bmp = Bitmap.createBitmap(480, 800, Bitmap.Config.ARGB_8888);&lt;/p>
&lt;p>view.draw(new Canvas(b));&lt;/p>
&lt;p>bmp就是截取的图片了，可通过bmp.compress(CompressFormat.PNG, 100, new FileOutputStream(file));把图片保存为文件。&lt;/p>
&lt;p> &lt;/p>
&lt;p>方法二：&lt;/p>
&lt;p>getWindow().getDecorView().setDrawingCacheEnabled(true);&lt;/p>
&lt;p>bmp=getWindow().getDecorView().getDrawingCache();&lt;/p>
&lt;p> &lt;/p>
&lt;p>但这样得到的图片是包含状态栏和标题栏的，如果想把状态栏和标题栏去掉，可把得到的图片顶部一部分剪裁掉。&lt;/p>
&lt;p>1、得到状态栏高度&lt;/p>
&lt;p>Rect rect = new Rect();&lt;/p>
&lt;p>view.getWindowVisibleDisplayFrame(rect);&lt;/p>
&lt;p>int statusBarHeight = rect.top;&lt;/p>
&lt;p>System.out.println(&amp;quot;状态栏高度：&amp;quot; + statusBarHeight);&lt;/p>
&lt;p> &lt;/p>
&lt;p>2、得到标题栏高度&lt;/p>
&lt;p>int wintop = getWindow().findViewById(android.R.id.content).getTop();&lt;/p>
&lt;p>int titleBarHeight = wintop - statusBarHeight;&lt;/p>
&lt;p>System.out.println(&amp;quot;标题栏高度:&amp;quot; + titleBarHeight);&lt;/p>
&lt;p> &lt;/p>
&lt;p> &lt;/p>
&lt;p>注：这样得到的截图是不会包含dialog和popupwindow的，你必须单独得到popupwindow的截图，然后再和背景截图合到一起。&lt;/p>
&lt;p>另外，截图的相关代码是不能放到oncreate中的，因为这时候getDectorView()得到的是null&lt;/p>
&lt;p> &lt;/p>
&lt;p> &lt;/p>
&lt;p>把两个bitmap合到一起的方法很简单。&lt;/p>
&lt;p>Bitmap bmpall=Biatmap.createBitmap(width,height,Config.ARGB_8888);&lt;/p>
&lt;p>Canvas canvas=new Canvas(bmpall);&lt;/p>
&lt;p>canvas.drawBitmap(bmp1,x,y,paint);&lt;/p>
&lt;p>canvas.drawBitmap(bmp2,x,y,paint);&lt;/p>
&lt;p>得到的bmpall就是合在一起的图片了。&lt;/p>
&lt;p> &lt;/p>
&lt;p>ps:按理说也getWindow.findViewById(android.R.id.content)得到的view就是不包含状态栏和标题栏的view，但这个我还没有试过。&lt;/p>
</content></entry><entry><title>终于搞定了wordpress的评论回复邮件通知插件</title><id></id><link rel="alternate" href="http://localhost:18080/2011/10/wordpress_mail_to_commenter/"></link><published>2011-10-29T15:23:57+00:00</published><updated>2011-10-29T15:23:57+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>用过各种各样的邮件插件和评论回复邮件通知的插件，总是没有找到完美的，都会有这样或那样的问题。&lt;/p>
&lt;p>这次下决心要把问题搞好，算起来总花了一天多时间。把经验分享一下，免得朋友们走弯路。&lt;/p>
</summary><content type="html">&lt;p>用过各种各样的邮件插件和评论回复邮件通知的插件，总是没有找到完美的，都会有这样或那样的问题。&lt;/p>
&lt;p>这次下决心要把问题搞好，算起来总花了一天多时间。把经验分享一下，免得朋友们走弯路。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>关于smtp插件的问题，可以看&lt;!-- raw HTML omitted -->这篇文章&lt;!-- raw HTML omitted -->  (可能很多朋友试过几乎所有的插件，试过网上几乎所有的方法都没解决问题，但也许这篇文章正是你想要的，因为smtp插件不生效的原因可能是个很冷门的原因)&lt;/p>
&lt;p> &lt;/p>
&lt;p>下面介绍评论邮件回复的插件。&lt;/p>
&lt;p>我用的是mail to commenter。配置起来很简单，而且默认的邮件格式很简洁，支持嵌套，很不错。&lt;/p>
&lt;p>但装上后也发现是不管用的，网上找了好久好久都没找到解决办法。后来自己无意中试了一下，居然找到问题了。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->是邮件头的问题&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>解决办法如下：&lt;/p>
&lt;p>在插件编辑中找到mail to commenter插件的mailtocommenter_functions.php文件&lt;/p>
&lt;p>往下拉，找到mailtocommenter_send_email方法。&lt;/p>
&lt;p>方法的最后一句return @wp_mail(...)&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->你只需要改成wp_mail($to,$subject,$message)就可以了，也就是把headers去掉&lt;!-- raw HTML omitted -->。&lt;/p>
&lt;p>再试一次，邮件发送成功了。&lt;/p>
&lt;p>但是你会发现邮件格式是乱的，链接全是乱的。因为邮件接收服务器把它当成了纯文本邮件，但是又自作主张的给网址加上了链接，所以就成了那个样子(我用的qq邮件收的邮件，不同的邮件可能会不一样)&lt;/p>
&lt;p>那我们就再把header加上，&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->直接把header改成 $headers = &amp;quot;Content-Type: text/html;charset=&amp;quot;$charset&amp;quot;\n&amp;quot;; &lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>return @wp_mail($to, $subject, $message,$headers);&lt;/p>
&lt;p>也就是把from和mime去掉了，再测试，邮件发送成功，而且格式完好。看来真是header的问题。&lt;/p>
&lt;p>不过这样做的话，发送人姓名就成了默认的wordpress。&lt;/p>
&lt;p>所以我干脆去改了wp-mail-smtp插件，也就是把默认发送人姓名直接改成我博客的名字。&lt;/p>
&lt;p> &lt;/p>
&lt;p>找到wp-includes/pluggable.php文件，找到function wp_mail()函数&lt;/p>
&lt;p>然后里面有一句&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>这里就是设置默认发送人姓名的。&lt;br />
改成你想要的就行了(中文会乱码)&lt;/p>
&lt;p>好了，到此就全部改好了，再去试试吧。完全没问题了。&lt;/p>
</content></entry><entry><title>wordpress发邮件出现Could not connect to SMTP host的解决办法(转载)</title><id></id><link rel="alternate" href="http://localhost:18080/2011/10/wordpress_could_not_connect_to_smtp_host/"></link><published>2011-10-26T22:54:39+00:00</published><updated>2011-10-26T22:54:39+00:00</updated><author><name>admin</name></author><summary type="html">&lt;p>很多php主机都禁用了mail()函数，所以一般找一个smtp的插件来完成发送邮件的工作。&lt;/p>
&lt;p>wp-mail-smtp这个插件不错，但可能很多人都遇到过 could not connect to SMTP host的错误。&lt;/p>
&lt;p>这个问题纠结很久，网上到处找，遇到这个问题的人也很多，后来终于找到了一篇文章介绍的解决办法。&lt;/p>
</summary><content type="html">&lt;p>很多php主机都禁用了mail()函数，所以一般找一个smtp的插件来完成发送邮件的工作。&lt;/p>
&lt;p>wp-mail-smtp这个插件不错，但可能很多人都遇到过 could not connect to SMTP host的错误。&lt;/p>
&lt;p>这个问题纠结很久，网上到处找，遇到这个问题的人也很多，后来终于找到了一篇文章介绍的解决办法。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>其实是主机禁用了fsockopen()函数，你可以写一个phpinfo看一下是否禁用了这个函数。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>然后你可以在disable_functions一栏看到fsockopen，果然被禁用。&lt;br />
解决办法：&lt;br />
&lt;!-- raw HTML omitted -->用pfsockopen()函数直接替换掉 fsockopen()&lt;!-- raw HTML omitted -->&lt;br />
如果pfsockopen函数被禁用的话，换其他可以操作Socket函数来代替, 如stream_socket_client()&lt;br />
找到wp-includes/class.smtp.php 文件&lt;br />
把&lt;br />
@fsockopen 改成 @pfsockopen&lt;/p>
&lt;p>方法转自&lt;!-- raw HTML omitted -->&lt;a href="http://www.hujuntao.com/archives/could-not-connect-to-smtp-host.html">http://www.hujuntao.com/archives/could-not-connect-to-smtp-host.html&lt;/a>&lt;!-- raw HTML omitted -->&lt;br />
已不知道原出处。&lt;/p></content></entry></feed>